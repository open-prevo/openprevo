/*============================================================================*
 * Copyright (c) 2018 - Prevo-System AG and others.
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 * 
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License, v. 2.0 are satisfied: GNU General Public License, version 3
 * with the GNU Classpath Exception which is
 * available at https://www.gnu.org/software/classpath/license.html.
 * 
 * SPDX-License-Identifier: EPL-2.0 OR GPL-3.0 WITH Classpath-exception-2.0
 * 
 * Contributors:
 *     Prevo-System AG - initial API and implementation
 *     Michael Kalt <michael.kalt@karakun.com> - initial contribution
 *     Markus Tiede <markus.tiede@open-co.de> - initial contribution
 *===========================================================================*/

buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
        gradleDockerVersion = '0.20.1'
        gradleDockerComposeVersion = '0.8.0'
        shadowPluginVersion = '2.0.4'
        gradleReleasePluginVersion = '2.6.0'
    }
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:${gradleDockerVersion}")
        classpath("com.avast.gradle:gradle-docker-compose-plugin:${gradleDockerComposeVersion}")
        classpath("com.github.jengelman.gradle.plugins:shadow:${shadowPluginVersion}")
        classpath("net.researchgate:gradle-release:${gradleReleasePluginVersion}")
    }
}

allprojects { project ->
    project.apply plugin: 'base'
    project.apply plugin: 'idea'
    project.apply plugin: 'eclipse'

    project.group = 'ch.prevo.open'
    project.version = version
}

subprojects { project ->

    repositories {
        mavenCentral()
    }

    project.apply plugin: 'io.spring.dependency-management'

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    plugins.withType(JavaPlugin) {
        project.sourceCompatibility = 1.8
        project.targetCompatibility = 1.8
    }


    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
        }
        dependencies {
            dependency("commons-io:commons-io:2.6")
            dependency("javax.inject:javax.inject:1")
            dependency("org.modelmapper:modelmapper:2.1.0")
            dependency("org.testcontainers:testcontainers:1.8.0")
            dependency("org.hibernate:hibernate-validator:6.0.10.Final")
            dependency("xerces:xerces:2.4.0")
            dependency("commons-io:commons-io:2.6")

            dependencySet(group: "org.apache.poi", version: "3.17") {
                entry("poi")
                entry("poi-ooxml")
                entry("poi-ooxml-schemas")
            }
        }
    }
}

build.dependsOn subprojects.findResults { it.tasks.findByName('build') }

project.apply plugin: 'net.researchgate.release'

release {
    preTagCommitMessage = '[OpenPrevo Release] - set current release version to: '
    tagCommitMessage = '[OpenPrevo Release] - create tag for release: '
    newVersionCommitMessage = '[OpenPrevo Release] - set new snapshot version to: '
    tagTemplate = 'v${version}'
    versionPropertyFile = 'gradle.properties'
    buildTasks = ['build']
}

assemble.dependsOn ':doc:publishDocumentation'

defaultTasks 'assemble'

/**
 * Hook for integration tests on Travis.
 * Integration tests will be executed only on Travis by default.
 */
task ciIntegrationTest(type: GradleBuild) {
    tasks = ['integrationTest']
    onlyIf {
        System.getenv("TRAVIS") == "true"
    }
}

check.finalizedBy ciIntegrationTest
